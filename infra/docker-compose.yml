version: "3.4"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.9
    restart: always
    container_name: zookeeper-otuskafka
    healthcheck:
      test: "[[ $$(echo srvr | nc localhost 2181 | grep -oG 'Mode: standalone') = \"Mode: standalone\" ]]"
      interval: 10s
      timeout: 1s
      retries: 30
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ALLOW_ANONYMOUS_LOGIN: yes
    volumes:
      - "zookeeper_data:/bitnami"
    ports:
      - "2181:2181"
#    networks:
#      - techbankNet

  kafka:
    hostname: kafka
    image: confluentinc/cp-kafka:7.0.9
    container_name: kafka-final
    depends_on:
      zookeeper:
        condition: service_healthy
    volumes:
      - "kafka_data:/bitnami"
    healthcheck:
      test: "test $$( /usr/bin/zookeeper-shell zookeeper:2181 get /brokers/ids/1 | grep { ) != ''"
      interval: 3s
      timeout: 2s
      retries: 300
    environment:
      KAFKA_BROKER_ID: 1
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,OUTSIDE://0.0.0.0:9091
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://localhost:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_NUM_PARTITIONS: 10  # Set the default number of partitions here
    ports:
      - "9092:9092"
      - "9091:9091"
#    networks:
#      - techbankNet

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop-final
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - kafka
#    networks:
#      - techbankNet

  mongo:
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - "mongodb_data_container:/data/db"
#    networks:
#      - techbankNet

  mysql:
    image: mysql:latest
    restart: always
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=techbankRootPsw
    volumes:
      - "mysql_data_container:/var/lib/mysql"
#    networks:
#      - techbankNet

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  mongodb_data_container:
  mysql_data_container:


#networks:
#  techbankNet:
#    external: true
